###############################################################################
#
#   AUTHOR: Maciej_Bak
#   CONTACT: wsciekly.maciek@gmail.com
#   CREATED: 15-02-2022
#   LICENSE: Apache_2.0
#
###############################################################################
---
name: ci-pipeline

on: push

jobs:

  pipeline-testruns:
    runs-on: ubuntu-22.04
    name: ubuntu-22.04
    strategy:
      fail-fast: false

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Setup miniconda & conda env
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          channels: conda-forge,defaults
          channel-priority: true
          auto-update-conda: true
          environment-file: environment.yml
          activate-environment: warlock
          auto-activate-base: false

      - name: Display all miniconda & env info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list
          conda clean --all --yes

      - name: Print compiler path
        shell: bash -l {0}
        run: which g++

      - name: Compile demon
        shell: bash -l {0}
        run: >
            g++ resources/demon_model/src/demon.cpp
            -o resources/demon_model/bin/demon
            -I/usr/share/miniconda3/envs/warlock/include
            -lm

      - name: Install demonanalysis into the env
        shell: bash -l {0}
        run: >
            Rscript -e "devtools::install('resources/demonanalysis', upgrade=TRUE)"

      # Run the tests sequentially;
      # This could be parallelized in the CI but setting up conda
      # is expensive; its faster to run the tests one-by-one.

      - name: Run the pipeline (test1)
        shell: bash -l {0}
        run: >
            bash warlock.sh
            --configfile tests/test1/config-Ubuntu.yml
            --environment local

      - name: Check outfiles (test1)
        shell: bash -l {0}
        working-directory: ./tests/test1
        run: >
            md5sum -c output-Ubuntu.md5;
            [ -e output/analyses/00000000/muller.txt ]

      - name: Cleanup (test1)
        shell: bash -l {0}
        run: rm -rf tests/test1/output

      - name: Run the pipeline (test2)
        shell: bash -l {0}
        run: >
            bash warlock.sh
            --configfile tests/test2/config-Ubuntu.yml
            --environment local
            --cores 4

      - name: Check outfiles (test2)
        shell: bash -l {0}
        working-directory: ./tests/test2
        run: |
            md5sum -c output-Ubuntu.md5;
            for dir in $(find output/analyses -mindepth 1 -type d); do
                [ -e "$dir/muller.txt" ]
            done

      - name: Cleanup (test2)
        shell: bash -l {0}
        run: rm -rf tests/test2/output
...
